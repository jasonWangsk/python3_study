"""
类
# 类是抽象的不能直接调用方法 必须使用具体的对象 实例去调用
使用类的时候必须实例化才能调用
实例化后的类称为 类对象
类的方法第一个参数默认 self
 类的方法也称为 属性
# 方法和函数的区别就是函数没有 self 参数
self 是必须的 所有的方法第一个参数必须是self，代表所有实例共享这个方法，self不具备任何含义

类的继承
封装： 把某些特定的方法封装在一个类下面，使得某个具体的功能比较隐蔽，代码看起来比较清晰
多态：同一个方法在不同场景下面有不同的效果
"""

# 举例
class Person:
    """人类"""
    def set_age(self, a):
        return a
    def get_age(self):
        print(self.set_age(5))
p = Person()  # 实例化类
p.get_age()  # 实例化后调用类方法/属性